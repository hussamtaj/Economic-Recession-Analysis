YC$Date <- format(strptime(YC$Date, format = "%m/%d/%Y"), "%Y-%m-%d")
YC$Date <- as.Date(YC$Date)
YC <- as.data.frame(YC)
GDP <- GDP[-1,]
GDP$Date <- format(strptime(GDP$Date, format = "%m/%d/%Y"), "%Y-%m-%d")
GDP$Date <- as.Date(GDP$Date)
monthly <-  seq(GDP$Date[1], tail(GDP$Date,1), by="month")
GDP1 <-  data.frame(Date = monthly, GDP = spline(GDP, method="fmm", xout = monthly)$y)
View(GDP1)
GDP <- GDP[-1,]
GDP$Date <- format(strptime(GDP$Date, format = "%m/%d/%Y"), "%Y-%m-%d")
GDP$Date <- as.Date(GDP$Date)
monthly <-  seq(GDP$Date[1], tail(GDP$Date,1), by="month")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(zoo)
library(lubridate)
library(GGally)
library(gam)
library(randomForest)
YC <- read_csv("data/Yeild Curve.csv", col_names = c("Date", "InterestRate"))
UnE <- read_csv("data/Unemployment.csv")
GDP <- read_csv("data/GDPPOT.csv", col_names = c("Date", "GDP"))
YC <-  YC[-1,]
YC$Date <- format(strptime(YC$Date, format = "%m/%d/%Y"), "%Y-%m-%d")
YC$Date <- as.Date(YC$Date)
YC <- as.data.frame(YC)
GDP <- GDP[-1,]
GDP$Date <- format(strptime(GDP$Date, format = "%m/%d/%Y"), "%Y-%m-%d")
GDP$Date <- as.Date(GDP$Date)
monthly <-  seq(GDP$Date[1], tail(GDP$Date,1), by="month")
GDP <-  data.frame(Date = monthly, GDP = spline(GDP, method="fmm", xout = monthly)$y)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(zoo)
library(lubridate)
library(GGally)
library(gam)
library(randomForest)
YC <- read_csv("data/Yeild Curve.csv", col_names = c("Date", "InterestRate"))
UnE <- read_csv("data/Unemployment.csv")
GDP <- read_csv("data/GDPPOT.csv", col_names = c("Date", "GDP"))
YC <-  YC[-1,]
YC$Date <- format(strptime(YC$Date, format = "%m/%d/%Y"), "%Y-%m-%d")
YC$Date <- as.Date(YC$Date)
YC <- as.data.frame(YC)
GDP <- GDP[-1,]
GDP$Date <- format(strptime(GDP$Date, format = "%m/%d/%Y"), "%Y-%m-%d")
GDP$Date <- as.Date(GDP$Date)
monthly <-  seq(GDP$Date[1], tail(GDP$Date,1), by="month")
GDP <-  data.frame(Date = monthly, GDP = spline(GDP, method="fmm", xout = monthly)$y)
UnE <- UnE %>%
pivot_longer(c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"), names_to = "Months", values_to = "UnemploymentRate")
UnE <- as.data.frame(UnE)
UnE <- UnE[-c(458:468), ]
UnE$Months <- match(UnE$Months,month.abb)
i1 <- grepl("^[0-9]$", UnE$Months)
UnE$Months[i1] <- paste0("0", UnE$Months[i1])
UnE <- unite(UnE, "Date", c(Year, Months), sep = "-", remove = TRUE, na.rm = FALSE)
UnE$Date <- YC$Date
Data <- merge(YC, GDP1, by = "Date")
Data <- merge(Data, UnE, by = "Date")
set.seed(39)
Data <- Data %>% mutate(IRIV = ifelse(InterestRate >= 0, 0,1))
Data$IRIV <- as.factor(Data$IRIV)
Data <- mutate(Data, id = row_number())
train <- sample_frac(Data, .75)
test <- anti_join(Data, train, by = "id")
train <- train[c(-10)]
test <- test[c(-10)]
Data <- Data[ , !(names(Data) %in% c("id"))]
train <- train[ , !(names(train) %in% c("id"))]
test <- test[ , !(names(test) %in% c("id"))]
gam <- gam(InterestRate ~ GDP + UnemploymentRate, data = train)
set.seed(39)
Data <- Data %>% mutate(IRIV = ifelse(InterestRate >= 0, 0,1))
Data$IRIV <- as.factor(Data$IRIV)
Data <- mutate(Data, id = row_number())
train <- sample_frac(Data, .75)
test <- anti_join(Data, train, by = "id")
train <- train[c(-10)]
test <- test[c(-10)]
Data <- Data[ , !(names(Data) %in% c("id"))]
train <- train[ , !(names(train) %in% c("id"))]
test <- test[ , !(names(test) %in% c("id"))]
gam <- gam(InterestRate ~ GDP + UnemploymentRate, data = train)
rf <- randomForest(IRIV ~ GDP + UnemploymentRate,
data = train,
importance = TRUE)
pred_rf <- predict(rf, newdata = test)
tb <- table(pred_rf, test$IRIV)
plot(margin(rf, test$IRIV))
accuracy <- (sum(diag(tb)))/sum(tb)
rf1 <- randomForest(InterestRate ~ GDP + UnemploymentRate,
data = train,
importance = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(zoo)
library(lubridate)
library(GGally)
library(gam)
library(randomForest)
YC <- read_csv("data/Yeild Curve.csv", col_names = c("Date", "InterestRate"))
UnE <- read_csv("data/Unemployment.csv")
GDP <- read_csv("data/GDPPOT.csv", col_names = c("Date", "GDP"))
YC <-  YC[-1,]
YC$Date <- format(strptime(YC$Date, format = "%m/%d/%Y"), "%Y-%m-%d")
YC$Date <- as.Date(YC$Date)
YC <- as.data.frame(YC)
GDP <- GDP[-1,]
GDP$Date <- format(strptime(GDP$Date, format = "%m/%d/%Y"), "%Y-%m-%d")
GDP$Date <- as.Date(GDP$Date)
monthly <-  seq(GDP$Date[1], tail(GDP$Date,1), by="month")
GDP <-  data.frame(Date = monthly, GDP = spline(GDP, method="fmm", xout = monthly)$y)
UnE <- UnE %>%
pivot_longer(c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"), names_to = "Months", values_to = "UnemploymentRate")
UnE <- as.data.frame(UnE)
UnE <- UnE[-c(458:468), ]
UnE$Months <- match(UnE$Months,month.abb)
i1 <- grepl("^[0-9]$", UnE$Months)
UnE$Months[i1] <- paste0("0", UnE$Months[i1])
UnE <- unite(UnE, "Date", c(Year, Months), sep = "-", remove = TRUE, na.rm = FALSE)
UnE$Date <- YC$Date
Data <- merge(YC, GDP1, by = "Date")
Data <- merge(Data, UnE, by = "Date")
Data$InterestRate <- as.numeric(Data$InterestRate)
#ggpairs(Data)
set.seed(39)
Data <- Data %>% mutate(IRIV = ifelse(InterestRate >= 0, 0,1))
Data$IRIV <- as.factor(Data$IRIV)
Data <- mutate(Data, id = row_number())
train <- sample_frac(Data, .75)
test <- anti_join(Data, train, by = "id")
train <- train[c(-10)]
test <- test[c(-10)]
Data <- Data[ , !(names(Data) %in% c("id"))]
train <- train[ , !(names(train) %in% c("id"))]
test <- test[ , !(names(test) %in% c("id"))]
rf1 <- randomForest(InterestRate ~ GDP + UnemploymentRate,
data = train,
importance = TRUE)
pred_rf1 <- predict(rf1, newdata = test)
plot(rf1)
mean((pred_rf1 - test$InterestRate)^2)
importance(rf1)
varImpPlot(rf1)
mean((pred_rf1 - test$InterestRate)^2)
sqrt(0.1199607)
accuracy <- (sum(diag(tb)))/sum(tb)
accuracy
gam <- gam(InterestRate ~ GDP + UnemploymentRate, data = train)
summary(gam)
plot.Gam(gam, se = TRUE, col = "red")
pred <- predict(gam, newdata = test)
mean((pred - test$InterestRate)^2)
mean((pred - test$InterestRate)^2)
sqrt(0.7380704)
sqrt(0.1199607)
YC <- read_csv("data/Yeild Curve.csv", col_names = c("Date", "InterestRate"))
UnE <- read_csv("data/Unemployment.csv")
GDP <- read_csv("data/GDPPOT.csv", col_names = c("Date", "GDP"))
View(GDP)
View(UnE)
UnE <- UnE %>%
pivot_longer(c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"), names_to = "Months", values_to = "UnemploymentRate")
UnE <- as.data.frame(UnE)
UnE <- UnE[-c(458:468), ]
UnE$Months <- match(UnE$Months,month.abb)
i1 <- grepl("^[0-9]$", UnE$Months)
UnE$Months[i1] <- paste0("0", UnE$Months[i1])
UnE <- unite(UnE, "Date", c(Year, Months), sep = "-", remove = TRUE, na.rm = FALSE)
UnE$Date <- YC$Date
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(zoo)
library(lubridate)
library(GGally)
library(gam)
library(randomForest)
YC <- read_csv("data/Yeild Curve.csv", col_names = c("Date", "InterestRate"))
UnE <- read_csv("data/Unemployment.csv")
GDP <- read_csv("data/GDPPOT.csv", col_names = c("Date", "GDP"))
YC <-  YC[-1,]
YC$Date <- format(strptime(YC$Date, format = "%m/%d/%Y"), "%Y-%m-%d")
YC$Date <- as.Date(YC$Date)
YC <- as.data.frame(YC)
GDP <- GDP[-1,]
GDP$Date <- format(strptime(GDP$Date, format = "%m/%d/%Y"), "%Y-%m-%d")
GDP$Date <- as.Date(GDP$Date)
monthly <-  seq(GDP$Date[1], tail(GDP$Date,1), by="month")
GDP <-  data.frame(Date = monthly, GDP = spline(GDP, method="fmm", xout = monthly)$y)
UnE <- UnE %>%
pivot_longer(c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"), names_to = "Months", values_to = "UnemploymentRate")
UnE <- as.data.frame(UnE)
UnE <- UnE[-c(458:468), ]
UnE$Months <- match(UnE$Months,month.abb)
i1 <- grepl("^[0-9]$", UnE$Months)
UnE$Months[i1] <- paste0("0", UnE$Months[i1])
UnE <- unite(UnE, "Date", c(Year, Months), sep = "-", remove = TRUE, na.rm = FALSE)
UnE$Date <- YC$Date
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(zoo)
library(lubridate)
library(GGally)
library(gam)
library(randomForest)
YC <- read_csv("data/Yeild Curve.csv", col_names = c("Date", "InterestRate"))
UnE <- read_csv("data/Unemployment.csv")
GDP <- read_csv("data/GDPPOT.csv", col_names = c("Date", "GDP"))
YC <-  YC[-1,]
YC$Date <- format(strptime(YC$Date, format = "%m/%d/%Y"), "%Y-%m-%d")
YC$Date <- as.Date(YC$Date)
YC <- as.data.frame(YC)
GDP <- GDP[-1,]
GDP$Date <- format(strptime(GDP$Date, format = "%m/%d/%Y"), "%Y-%m-%d")
GDP$Date <- as.Date(GDP$Date)
monthly <-  seq(GDP$Date[1], tail(GDP$Date,1), by="month")
GDP <-  data.frame(Date = monthly, GDP = spline(GDP, method="fmm", xout = monthly)$y)
UnE <- UnE %>%
pivot_longer(c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"), names_to = "Months", values_to = "UnemploymentRate")
UnE <- as.data.frame(UnE)
UnE <- UnE[-c(458:468), ]
UnE$Months <- match(UnE$Months,month.abb)
i1 <- grepl("^[0-9]$", UnE$Months)
UnE$Months[i1] <- paste0("0", UnE$Months[i1])
UnE <- unite(UnE, "Date", c(Year, Months), sep = "-", remove = TRUE, na.rm = FALSE)
UnE$Date <- YC$Date
Data <- merge(YC, GDP1, by = "Date")
Data <- merge(Data, UnE, by = "Date")
Data$InterestRate <- as.numeric(Data$InterestRate)
ggpairs(Data)
set.seed(39)
Data <- Data %>% mutate(IRIV = ifelse(InterestRate >= 0, 0,1))
Data$IRIV <- as.factor(Data$IRIV)
Data <- mutate(Data, id = row_number())
train <- sample_frac(Data, .75)
test <- anti_join(Data, train, by = "id")
train <- train[c(-10)]
test <- test[c(-10)]
Data <- Data[ , !(names(Data) %in% c("id"))]
train <- train[ , !(names(train) %in% c("id"))]
test <- test[ , !(names(test) %in% c("id"))]
gam <- gam(InterestRate ~ GDP + UnemploymentRate, data = train)
summary(gam)
plot.Gam(gam, se = TRUE, col = "red")
pred <- predict(gam, newdata = test)
mean((pred - test$InterestRate)^2)
rf <- randomForest(IRIV ~ GDP + UnemploymentRate,
data = train,
importance = TRUE)
pred_rf <- predict(rf, newdata = test)
tb <- table(pred_rf, test$IRIV)
plot(margin(rf, test$IRIV))
accuracy <- (sum(diag(tb)))/sum(tb)
?ggpairs
rf1 <- randomForest(InterestRate ~ GDP + UnemploymentRate,
data = train,
importance = TRUE)
pred_rf1 <- predict(rf1, newdata = test)
plot(rf1)
mean((pred_rf1 - test$InterestRate)^2)
importance(rf1)
varImpPlot(rf1)
summary(rf1)
rf1 <- randomForest(InterestRate ~ GDP + UnemploymentRate,
data = train,
importance = TRUE)
pred_rf1 <- predict(rf1, newdata = test)
summary(rf1)
plot(rf1)
mean((pred_rf1 - test$InterestRate)^2)
importance(rf1)
varImpPlot(rf1)
sqrt(0.1207409)
mean(pred_rf != test$IRIV)
rf <- randomForest(IRIV ~ GDP + UnemploymentRate,
data = train,
importance = TRUE)
pred_rf <- predict(rf, newdata = test)
tb <- table(pred_rf, test$IRIV)
mcr <- mean(pred_rf != test$IRIV)
plot(margin(rf, test$IRIV))
accuracy <- (sum(diag(tb)))/sum(tb)
rf <- randomForest(IRIV ~ GDP + UnemploymentRate,
data = train,
importance = TRUE)
pred_rf <- predict(rf, newdata = test)
tb <- table(pred_rf, test$IRIV)
mcr <- mean(pred_rf != test$IRIV)
plot(margin(rf, test$IRIV))
accuracy <- (sum(diag(tb)))/sum(tb)
AIC(gam)
plot(AIC(gam))
plot.Gam(gam, se = TRUE, col = "red")
mean((pred - test$InterestRate)^2)
rf <- randomForest(IRIV ~ GDP + UnemploymentRate,
data = train,
importance = TRUE)
pred_rf <- predict(rf, newdata = test)
tb <- table(pred_rf, test$IRIV)
mcr <- mean(pred_rf != test$IRIV)
plot(margin(rf, test$IRIV))
accuracy <- (sum(diag(tb)))/sum(tb)
rf <- randomForest(IRIV ~ GDP + UnemploymentRate,
data = train,
importance = TRUE)
pred_rf <- predict(rf, newdata = test)
tb <- table(pred_rf, test$IRIV)
mcr <- mean(pred_rf != test$IRIV)
plot(margin(rf, test$IRIV))
accuracy <- (sum(diag(tb)))/sum(tb)
rf1 <- randomForest(InterestRate ~ GDP + UnemploymentRate,
data = train,
importance = TRUE)
pred_rf1 <- predict(rf1, newdata = test)
summary(rf1)
plot(rf1)
mean((pred_rf1 - test$InterestRate)^2)
importance(rf1)
varImpPlot(rf1)
mean((pred_rf1 - test$InterestRate)^2)
rf <- randomForest(IRIV ~ GDP + UnemploymentRate,
data = train,
importance = TRUE)
pred_rf <- predict(rf, newdata = test)
tb <- table(pred_rf, test$IRIV)
mcr <- mean(pred_rf != test$IRIV)
plot(margin(rf, test$IRIV))
accuracy <- (sum(diag(tb)))/sum(tb)
rf <- randomForest(IRIV ~ GDP + UnemploymentRate,
data = train,
importance = TRUE)
pred_rf <- predict(rf, newdata = test)
tb <- table(pred_rf, test$IRIV)
mcr <- mean(pred_rf != test$IRIV)
plot(margin(rf, test$IRIV))
accuracy <- (sum(diag(tb)))/sum(tb)
knitr::opts_chunk$set(echo = TRUE)
GDP <- GDP[-1,]
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(zoo)
library(lubridate)
library(GGally)
library(gam)
library(randomForest)
YC <- read_csv("data/Yeild Curve.csv", col_names = c("Date", "InterestRate"))
UnE <- read_csv("data/Unemployment.csv")
GDP <- read_csv("data/GDPPOT.csv", col_names = c("Date", "GDP"))
YC <-  YC[-1,]
YC$Date <- format(strptime(YC$Date, format = "%m/%d/%Y"), "%Y-%m-%d")
YC$Date <- as.Date(YC$Date)
YC <- as.data.frame(YC)
View(GDP)
GDP <- GDP[-1,]
GDP$Date <- format(strptime(GDP$Date, format = "%m/%d/%Y"), "%Y-%m-%d")
GDP$Date <- as.Date(GDP$Date)
monthly <-  seq(GDP$Date[1], tail(GDP$Date,1), by="month")
GDP <-  data.frame(Date = monthly, GDP = spline(GDP, method="fmm", xout = monthly)$y)
GDP$GDP <- log(GDP$GDP)
View(GDP)
plot(GDP)
UnE <- UnE %>%
pivot_longer(c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"), names_to = "Months", values_to = "UnemploymentRate")
UnE <- as.data.frame(UnE)
UnE <- UnE[-c(458:468), ]
UnE$Months <- match(UnE$Months,month.abb)
i1 <- grepl("^[0-9]$", UnE$Months)
UnE$Months[i1] <- paste0("0", UnE$Months[i1])
UnE <- unite(UnE, "Date", c(Year, Months), sep = "-", remove = TRUE, na.rm = FALSE)
UnE$Date <- YC$Date
Data <- merge(YC, GDP, by = "Date")
Data <- merge(Data, UnE, by = "Date")
Data$InterestRate <- as.numeric(Data$InterestRate)
ggpairs(Data)
set.seed(39)
Data <- Data %>% mutate(IRIV = ifelse(InterestRate >= 0, 0,1))
Data$IRIV <- as.factor(Data$IRIV)
Data <- mutate(Data, id = row_number())
train <- sample_frac(Data, .75)
test <- anti_join(Data, train, by = "id")
train <- train[c(-10)]
test <- test[c(-10)]
Data <- Data[ , !(names(Data) %in% c("id"))]
train <- train[ , !(names(train) %in% c("id"))]
test <- test[ , !(names(test) %in% c("id"))]
gam <- gam(InterestRate ~ GDP + UnemploymentRate, data = train)
summary(gam)
plot.Gam(gam, se = TRUE, col = "red")
pred <- predict(gam, newdata = test)
mean((pred - test$InterestRate)^2)
rf1 <- randomForest(InterestRate ~ GDP + UnemploymentRate,
data = train,
importance = TRUE)
pred_rf1 <- predict(rf1, newdata = test)
summary(rf1)
plot(rf1)
mean((pred_rf1 - test$InterestRate)^2)
importance(rf1)
varImpPlot(rf1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(zoo)
library(lubridate)
library(GGally)
library(gam)
library(randomForest)
YC <- read_csv("data/Yeild Curve.csv", col_names = c("Date", "InterestRate"))
UnE <- read_csv("data/Unemployment.csv")
GDP <- read_csv("data/GDPPOT.csv", col_names = c("Date", "GDP"))
YC <-  YC[-1,]
YC$Date <- format(strptime(YC$Date, format = "%m/%d/%Y"), "%Y-%m-%d")
YC$Date <- as.Date(YC$Date)
YC <- as.data.frame(YC)
GDP <- GDP[-1,]
GDP$Date <- format(strptime(GDP$Date, format = "%m/%d/%Y"), "%Y-%m-%d")
GDP$Date <- as.Date(GDP$Date)
monthly <-  seq(GDP$Date[1], tail(GDP$Date,1), by="month")
GDP <-  data.frame(Date = monthly, GDP = spline(GDP, method="fmm", xout = monthly)$y)
UnE <- UnE %>%
pivot_longer(c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"), names_to = "Months", values_to = "UnemploymentRate")
UnE <- as.data.frame(UnE)
UnE <- UnE[-c(458:468), ]
UnE$Months <- match(UnE$Months,month.abb)
i1 <- grepl("^[0-9]$", UnE$Months)
UnE$Months[i1] <- paste0("0", UnE$Months[i1])
UnE <- unite(UnE, "Date", c(Year, Months), sep = "-", remove = TRUE, na.rm = FALSE)
UnE$Date <- YC$Date
Data <- merge(YC, GDP, by = "Date")
Data <- merge(Data, UnE, by = "Date")
Data$InterestRate <- as.numeric(Data$InterestRate)
ggpairs(Data)
set.seed(39)
Data <- Data %>% mutate(IRIV = ifelse(InterestRate >= 0, 0,1))
Data$IRIV <- as.factor(Data$IRIV)
Data <- mutate(Data, id = row_number())
train <- sample_frac(Data, .75)
test <- anti_join(Data, train, by = "id")
train <- train[c(-10)]
test <- test[c(-10)]
Data <- Data[ , !(names(Data) %in% c("id"))]
train <- train[ , !(names(train) %in% c("id"))]
test <- test[ , !(names(test) %in% c("id"))]
gam <- gam(InterestRate ~ GDP + UnemploymentRate, data = train)
summary(gam)
plot.Gam(gam, se = TRUE, col = "red")
pred <- predict(gam, newdata = test)
mean((pred - test$InterestRate)^2)
rf1 <- randomForest(InterestRate ~ GDP + UnemploymentRate,
data = train,
importance = TRUE)
pred_rf1 <- predict(rf1, newdata = test)
summary(rf1)
plot(rf1)
mean((pred_rf1 - test$InterestRate)^2)
importance(rf1)
varImpPlot(rf1)
MDSplot(rf)
?MDSplot()
rf <- randomForest(IRIV ~ GDP + UnemploymentRate,
data = train,
importance = TRUE)
pred_rf <- predict(rf, newdata = test)
tb <- table(pred_rf, test$IRIV)
mcr <- mean(pred_rf != test$IRIV)
plot(margin(rf, test$IRIV))
accuracy <- (sum(diag(tb)))/sum(tb)
MDSplot(rf)
rf <- randomForest(IRIV ~ GDP + UnemploymentRate,
data = train, proximity = TRUE,
importance = TRUE)
rf <- randomForest(IRIV ~ GDP + UnemploymentRate,
data = train, proximity = TRUE,
importance = TRUE)
pred_rf <- predict(rf, newdata = test)
tb <- table(pred_rf, test$IRIV)
mcr <- mean(pred_rf != test$IRIV)
plot(margin(rf, test$IRIV))
accuracy <- (sum(diag(tb)))/sum(tb)
MDSplot(rf)
rf <- randomForest(IRIV ~ GDP + UnemploymentRate,
data = train, proximity = TRUE,
importance = TRUE)
pred_rf <- predict(rf, newdata = test)
tb <- table(pred_rf, test$IRIV)
mcr <- mean(pred_rf != test$IRIV)
plot(margin(rf, test$IRIV))
accuracy <- (sum(diag(tb)))/sum(tb)
MDSplot(rf, fac =2)
roc.plot(pred_rf, test$IRIV)
install.packages("ROCR")
library(ROCR)
roc.plot(pred_rf, test$IRIV)
roc.plot(pred_rf, test$IRIV)
roc.plot(pred_rf, test$IRIV)
?roc.plot
roc(pred_rf, test$IRIV)
?roc
roc.curve(pred_rf, test$IRIV)
auc(rf)
auc(rf)
rf1 <- randomForest(InterestRate ~ GDP + UnemploymentRate,
data = train,
importance = TRUE)
pred_rf1 <- predict(rf1, newdata = test)
summary(rf1)
plot(rf1)
mean((pred_rf1 - test$InterestRate)^2)
importance(rf1)
varImpPlot(rf1)
